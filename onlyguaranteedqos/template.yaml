# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8scontainerguaranteed
spec:
  crd:
    spec:
      names:
        kind: K8sContainerGuaranteed
  targets:
  - target: admission.k8s.gatekeeper.sh
    rego: |
      package k8scontainerguaranteed

      missing(obj, field) = true {
        not obj[field]
      }

      missing(obj, field) = true {
        obj[field] == ""
      }

      violation[{"msg": msg, "details": {}}] {
        limits_cpu := input.review.object.spec.template.spec.containers[_].resources.limits.cpu
        requests_cpu := input.review.object.spec.template.spec.containers[_].resources.requests.cpu
        limits_cpu != requests_cpu
        msg := sprintf("CPU limits and requests are different so it cannot be a Guaranteed QoS: %v", [input.review.object.spec.template.spec.containers[_].resources])
      }

      violation[{"msg": msg, "details": {}}] {
        limits_memory := input.review.object.spec.template.spec.containers[_].resources.limits.memory
        requests_memory := input.review.object.spec.template.spec.containers[_].resources.requests.memory
        limits_memory != requests_memory
        msg := sprintf("Memory limits and requests are different so it cannot be a Guaranteed QoS: %v", [input.review.object.spec.template.spec.containers[_].resources])
      }

      violation[{"msg": msg, "details": {}}] {
        value := input.review.object.spec.template.spec.containers[_].resources.limits
        missing(value, "cpu")
        msg := sprintf("Limit cpu not specified so it cannot be a Guaranteed Qos: %v", [value])
      }

      violation[{"msg": msg, "details": {}}] {
        value := input.review.object.spec.template.spec.containers[_].resources.limits
        missing(value, "memory")
        msg := sprintf("Limit memory not specified so it cannot be a Guaranteed QoS: %v", [value])
      }

      violation[{"msg": msg, "details": {}}] {
        value := input.review.object.spec.template.spec.containers[_].resources
        missing(value, "limits")
        msg := sprintf("Limits were not specified so it cannot be a Guaranteed QoS: %v", [input.review.object.spec.template.spec.containers[_].resources])
      }
